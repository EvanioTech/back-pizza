// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// criar uma migration: npx prisma migrate dev --name init ou yarn prisma migrate dev 
model User {
  id       String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@map("users")
}

model Category {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  @@map("categories")
  products  Product[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  categoryId  String
  
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  category    Category @relation(fields: [category_id], references: [id])

  @@map("products")
  category_id String
  items Item[]
}


model Order {
  id          String   @id @default(cuid())
  table      Int
  status      Boolean @default(false)
  draft       Boolean @default(true)
  name        String?

   createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  
  

  @@map("orders")
  
  Item Item[]
}

model Item {
  id          String   @id @default(cuid())
  amount      Int

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  
  order Order @relation(fields: [order_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])
  

  @@map("items")
  order_id String
  product_id String
}
